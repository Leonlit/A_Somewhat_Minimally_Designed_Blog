{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","data","pageContext","location","markdownRemark","excerpt","html","frontmatter","siteTitle","site","siteMetadata","title","description","date","thumbnail_attr","previous","next","postUrl","href","pre_type","postType","next_type","url","className","fluid","thumbnail","childImageSharp","style","textAlign","display","dangerouslySetInnerHTML","__html","to","fields","slug","rel","blogPost"],"mappings":"4FAAA,0JAwFeA,UA/EU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAAe,EAEvBF,EAAKG,eAAnCC,EAFqD,EAErDA,QAASC,EAF4C,EAE5CA,KAAMC,EAFsC,EAEtCA,YAChBC,EAAYP,EAAKQ,KAAKC,aAAaC,MAClCA,EAA4CJ,EAA5CI,MAAOC,EAAqCL,EAArCK,YAAaC,EAAwBN,EAAxBM,KAAMC,EAAkBP,EAAlBO,eACzBC,EAAmBb,EAAnBa,SAAUC,EAASd,EAATc,KACZC,EAAUd,EAASe,KAErBC,EAAW,GAEbA,EADEJ,GAA8C,YAAlCA,EAASR,YAAYa,SACxB,YAEA,OAGb,IAAIC,EAAY,GAOhB,OALEA,EADEL,GAAsC,YAA9BA,EAAKT,YAAYa,SACf,YAEA,OAIZ,kBAAC,IAAD,CAAQjB,SAAUA,EAAUQ,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOA,EACPC,YAAcA,GAAeP,EAC7BiB,IAAKL,IAEP,iCACE,kBAAC,IAAD,CAAKM,UAAU,gBAAgBC,MAAOjB,EAAYkB,UAAUC,gBAAgBF,QAC3EV,GACC,0BAAMa,MAAO,CACXC,UAAW,SACXC,QAAS,UACPtB,EAAYO,eAAe,GAH/B,UAIE,uBAAGI,KAAMX,EAAYO,eAAe,IACjCP,EAAYO,eAAe,KAIlC,gCACE,4BAAKH,GACL,2BAAIE,IAEN,6BAASiB,wBAAyB,CAAEC,OAAQzB,KAC5C,6BACA,kBAAC,IAAD,CACEgB,IAAOL,EACPN,MAASA,EACTC,YAAeA,GAAeP,IAEhC,gCACE,kBAAC,IAAD,QAIJ,yBAAKkB,UAAU,mBACb,4BACE,4BACGR,GACC,kBAAC,OAAD,CAAMiB,GAAE,IAAMb,EAAWJ,EAASkB,OAAOC,KAAQC,IAAI,QAArD,KACKpB,EAASR,YAAYI,QAI9B,4BACGK,GACC,kBAAC,OAAD,CAAMgB,GAAE,IAAMX,EAAYL,EAAKiB,OAAOC,KAAQC,IAAI,QAC/CnB,EAAKT,YAAYI,MADpB,WAaP,IAAMyB,EAAQ","file":"component---src-templates-blog-post-js-062a7348ab22dbd6668d.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql} from \"gatsby\";\r\nimport Img from \"gatsby-image\";\r\n\r\nimport Bio from \"../components/bio\";\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\nimport ShareToMedia from \"../components/shareToMedia\";\r\n\r\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\r\n\r\n  const {excerpt, html, frontmatter} = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const {title, description, date, thumbnail_attr} = frontmatter;\r\n  const { previous, next } = pageContext\r\n  const postUrl = location.href;\r\n\r\n  let pre_type = \"\";\r\n  if (previous && previous.frontmatter.postType === \"project\") {\r\n    pre_type = \"portfolio\";\r\n  } else {\r\n    pre_type = \"blog\";\r\n  }\r\n\r\n  let next_type = \"\";\r\n  if (next && next.frontmatter.postType === \"project\") {\r\n    next_type = \"portfolio\";\r\n  } else {\r\n    next_type = \"blog\";\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO\r\n        title={title}\r\n        description={ description || excerpt}\r\n        url={postUrl}\r\n      />\r\n      <article>\r\n        <Img className=\"postThumbnail\" fluid={frontmatter.thumbnail.childImageSharp.fluid}/>\r\n        {thumbnail_attr && (\r\n          <span style={{\r\n            textAlign: \"center\",\r\n            display: \"block\",\r\n          }}>{frontmatter.thumbnail_attr[0]} from &nbsp;\r\n            <a href={frontmatter.thumbnail_attr[1]}>\r\n              {frontmatter.thumbnail_attr[1]}\r\n            </a>\r\n          </span>\r\n        )}\r\n        <header>\r\n          <h2>{title}</h2>\r\n          <p>{date}</p>\r\n        </header>\r\n        <section dangerouslySetInnerHTML={{ __html: html }} />\r\n        <hr/>\r\n        <ShareToMedia \r\n          url = {postUrl}\r\n          title = {title}\r\n          description = {description || excerpt}\r\n        />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n\r\n      <nav className=\"post-navigation\">\r\n        <ul>\r\n          <li>\r\n            {previous && (\r\n              <Link to={`/${pre_type}${previous.fields.slug}`} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={`/${next_type}${next.fields.slug}`} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const blogPost = graphql`\r\nquery BlogPostBySlug($slug: String!) {\r\n  site {\r\n    siteMetadata {\r\n      title\r\n    }\r\n  }\r\n  markdownRemark(fields: { slug: { eq: $slug } }) {\r\n    excerpt(pruneLength: 160)\r\n    html\r\n    frontmatter {\r\n      title\r\n      date(formatString: \"MMMM DD, YYYY\")\r\n      description\r\n      postType\r\n      thumbnail_attr\r\n      thumbnail {\r\n        childImageSharp {\r\n          fluid(maxWidth: 1140, maxHeight: 1140) {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`"],"sourceRoot":""}