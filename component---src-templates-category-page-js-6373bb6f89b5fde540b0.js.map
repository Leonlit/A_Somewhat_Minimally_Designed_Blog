{"version":3,"sources":["webpack:///./src/components/postCard.js","webpack:///./src/templates/category-page.js"],"names":["PostCard","node","locationPlaceholder","slug","fields","title","frontmatter","tags","categories","className","fluid","thumbnail","childImageSharp","style","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","CategoryPageTemplate","data","pageContext","location","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","category","map","key","id","categoryTemplate"],"mappings":"4FAAA,sEAiCeA,IA5BE,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,oBACfC,EAAOF,EAAKG,OAAOD,KACnBE,EAAQJ,EAAKK,YAAYD,MACzBE,EAAON,EAAKK,YAAYE,WAEhC,OACE,6BAASC,UAAU,kBACf,kBAAC,IAAD,CAAKA,UAAU,YAAYC,MAAOT,EAAKK,YAAYK,UAAUC,gBAAgBF,QAC7E,gCACA,4BACI,kBAAC,OAAD,CAAMG,MAAO,CAAEC,UAAU,QAAWC,GAAE,GAAKb,EAAsBC,EAA3B,KACrCE,IAGL,+BAAQJ,EAAKK,YAAYU,OAExBT,GAAQ,kBAAC,IAAD,CAAMA,KAAMA,IACrB,6BACA,iCACA,uBACIU,wBAAyB,CACzBC,OAAQjB,EAAKK,YAAYa,aAAelB,EAAKmB,e,kCC1BzD,qHA2BeC,UAnBc,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAE3CC,EAAYH,EAAKI,KAAKC,aAAatB,MACnCuB,EAAQN,EAAKO,kBAAkBC,MAC9BC,EAAYR,EAAZQ,SACP,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUnB,MAAOoB,GACjC,kBAAC,IAAD,CAAKpB,MAAK,kBAAoB0B,EAAYZ,YAAW,iBAAmBY,IACxE,6BACGH,EAAMI,KAAI,YAAe,IAAZ/B,EAAW,EAAXA,KACZ,OACE,kBAAC,IAAD,CAAUgC,IAAKhC,EAAKiC,GAAIjC,KAAMA,EAAMC,oBAAoB,iBAU7D,IAAMiC,EAAgB","file":"component---src-templates-category-page-js-6373bb6f89b5fde540b0.js","sourcesContent":["import React from \"react\"\r\nimport {Link} from \"gatsby\"\r\nimport Tags from \"../components/feature/tags\";\r\nimport Img from \"gatsby-image\";\r\n\r\nconst PostCard = ({node, locationPlaceholder}) => {\r\n    const slug = node.fields.slug;\r\n    const title = node.frontmatter.title\r\n    const tags = node.frontmatter.categories;\r\n\r\n  return (\r\n    <article className=\"card blog-card\">\r\n        <Img className=\"headerImg\" fluid={node.frontmatter.thumbnail.childImageSharp.fluid}/>\r\n        <header>\r\n        <h3>\r\n            <Link style={{ boxShadow: `none` }} to={`${locationPlaceholder}${slug}.`}>\r\n            {title}\r\n            </Link>\r\n        </h3>\r\n        <small>{node.frontmatter.date}</small>\r\n        </header>\r\n        {tags && <Tags tags={tags}/>}\r\n        <hr/>\r\n        <section>\r\n        <p\r\n            dangerouslySetInnerHTML={{\r\n            __html: node.frontmatter.description || node.excerpt,\r\n            }}\r\n        />\r\n        </section>\r\n    </article>\r\n  )\r\n}\r\nexport default PostCard;","import React from \"react\"\r\nimport { graphql} from \"gatsby\";\r\n\r\nimport PostCard from \"../components/postCard\";\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\n\r\n\r\nconst CategoryPageTemplate = ({ data, pageContext, location }) => {\r\n\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const posts = data.allMarkdownRemark.edges\r\n  const {category} = pageContext;\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title={`Blog post for #${category}`} description={`ALl post for #${category}`}/>\r\n      <div>\r\n        {posts.map(({ node }) => {\r\n          return (\r\n            <PostCard key={node.id} node={node} locationPlaceholder=\"../../\" />\r\n          )\r\n        })}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default CategoryPageTemplate\r\n\r\nexport const categoryTemplate = graphql`\r\n  query BlogPostByCategory($category: String) {\r\n    site {\r\n      ...SiteInformations\r\n    }\r\n    allMarkdownRemark(\r\n      filter: {frontmatter: {categories: {in: [$category]}}}\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      ...PostDetails\r\n    }\r\n  }\r\n`"],"sourceRoot":""}